<navigation:Page
    x:Class="Rhit.Applications.Views.Views.NodesMapPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:cmds="clr-namespace:Rhit.Applications.Mvvm.Commands;assembly=Rhit.Applications.Mvvm.SL"
    xmlns:converter="clr-namespace:Rhit.Applications.Views.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/expression/2010/interactions"
    xmlns:it="http://schemas.microsoft.com/expression/2010/interactivity"
    xmlns:map="clr-namespace:Microsoft.Maps.MapControl;assembly=Microsoft.Maps.MapControl"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:my="clr-namespace:Rhit.Applications.Views" 
    xmlns:navi="clr-namespace:Microsoft.Maps.MapControl.Navigation;assembly=Microsoft.Maps.MapControl"
    xmlns:navigation="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Navigation"
    xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:toolkit="http://schemas.microsoft.com/winfx/2006/xaml/presentation/toolkit" 
    xmlns:exts="clr-namespace:Rhit.Applications.Extentions.Controls;assembly=Rhit.Applications.Extentions.SL"
    xmlns:util="clr-namespace:Rhit.Applications.Views.Utilities" 
    xmlns:vm="clr-namespace:Rhit.Applications.ViewModels;assembly=Rhit.Applications.ViewModels.SL"
    Title="MapPage" d:DesignHeight="480" d:DesignWidth="640" Style="{StaticResource PageStyle}" mc:Ignorable="d">
    
    <navigation:Page.Resources>

        <converter:ObjectToBoolConverter x:Key="ObjectBoolConverter" />
        <converter:ObjectToBoolConverter x:Key="RObjectBoolConverter" Reverse="True" />

        <util:CalibrationHandler x:Name="Calibrator" />
        <util:LocationsProvider x:Name="ViewLocations" />
        <util:LocalImageLoader x:Name="ImageLoader" />
        <vm:NodesViewModel x:Name="ViewModel" />

        <vm:MapModelInitializer x:Name="Initializer" BitmapProvider="{StaticResource ImageLoader}" BuildingMappingProvider="{StaticResource Calibrator}" LocationsProvider="{StaticResource ViewLocations}" ViewModelInstance="{StaticResource ViewModel}" />

        <Style x:Key="NavigationBarList" TargetType="ListBox">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock Margin="5,0" FontWeight="Bold" Foreground="White" Text="{Binding Label}" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpanderStyle" TargetType="toolkit:Expander">
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="3" />
            <Setter Property="ExpandDirection" Value="Left" />
            <Setter Property="MinHeight" Value="100" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="Background">
                <Setter.Value>
                    <SolidColorBrush Opacity="0.8" Color="Gray" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ExpanderHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="Bold" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Top" />
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5" />
            <Setter Property="Margin" Value="-7,20,-7,0" />
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform Angle="90" />
                </Setter.Value>
            </Setter>
        </Style>

        <util:TaskContainer x:Name="PathTasks" CanceledCommand="{Binding CancelCommand, ElementName=ViewModel}" CompletedCommand="{Binding SaveCommand, ElementName=ViewModel}">
            <util:TaskContainer.Tasks>
                <!--<util:Task Label="Sync Floor" StartCommand="{Binding SyncFloorCommand, ElementName=ViewModel}" ToolTip="Sync geo coordinates to floor plan image.">
                    <util:Task.Steps>
                        <util:TaskStep Number="1" Instructions="Select a floor plan to load to calibrate to the map." Label="Load Image" />
                        <util:TaskStep Number="2" Instructions="Enter the floor you wish to calibrate to the loaded image. Use negative values for lower levels. Zero is never used." Label="Specify Floor" />
                        <util:TaskStep Number="3" Instructions="To finalize calibration, click the 'Save' Button" Label="Save" />
                    </util:Task.Steps>
                </util:Task>-->
                <util:Task Label="Add Node" StartCommand="{Binding AddNodeCommand, ElementName=ViewModel}" ToolTip="Create a new node">
                    <util:Task.Steps>
                        <util:TaskStep Number="1" Instructions="Click on the map to place a new node. You may drag the pushpin once it is placed." Label="Place Node" />
                        <util:TaskStep Number="2" Instructions="Click the 'Save' Button" Label="Save" />
                    </util:Task.Steps>
                </util:Task>
                <util:Task Label="Delete Node" StartCommand="{Binding DeleteNodeCommand, ElementName=ViewModel}" ToolTip="Delete a node">
                    <util:Task.Steps>
                        <util:TaskStep Number="1" Instructions="Select a node to be deleted." Label="Select Node" />
                    </util:Task.Steps>
                </util:Task>
                <util:Task Label="Add Path" StartCommand="{Binding AddPathCommand, ElementName=ViewModel}" ToolTip="Add a path">
                    <util:Task.Steps>
                        <util:TaskStep Number="1" Instructions="Select two nodes to create a path." Label="Select Nodes" />
                    </util:Task.Steps>
                </util:Task>
                <util:Task Label="Delete Path" StartCommand="{Binding DeletePathCommand, ElementName=ViewModel}" ToolTip="Delete a path">
                    <util:Task.Steps>
                        <util:TaskStep Number="1" Instructions="Select two nodes to delete a path." Label="Select Nodes" />
                    </util:Task.Steps>
                </util:Task>
                <util:Task Label="Move Nodes" StartCommand="{Binding MoveNodesCommand, ElementName=ViewModel}" ToolTip="Moves Nodes">
                    <util:Task.Steps>
                        <util:TaskStep Number="1" Instructions="Drag Nodes to move them." Label="Move Nodes" />
                        <util:TaskStep Number="1" Instructions="Click Save" Label="Save" />
                    </util:Task.Steps>
                </util:Task>
            </util:TaskContainer.Tasks>
        </util:TaskContainer>

        <ControlTemplate x:Key="DirectionsPushpinTemplate" TargetType="exts:DraggablePushpin">
            <Grid>
                <Ellipse Fill="{TemplateBinding Background}" Width="16" Height="16" Stroke="White" StrokeThickness="1" />
                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
            </Grid>
        </ControlTemplate>

        <DataTemplate x:Key="NodeTemplate">
            <exts:DraggablePushpin CanChange="{Binding CanMove}" Location="{Binding Center, Mode=TwoWay}" Tag="{Binding Id}" Background="Black" PositionOrigin="Center" Template="{StaticResource DirectionsPushpinTemplate}" cmds:CommandManager.Command="{Binding ClickCommand}" cmds:CommandManager.CommandEventName="MouseLeftButtonUp">
                <Grid>
                    <Ellipse Fill="Green" Width="16" Height="16" Stroke="White" StrokeThickness="1" Visibility="{Binding IsSelected, Converter={StaticResource VisibilityConverter}}" />
                    <Ellipse Fill="Blue" Width="16" Height="16" Stroke="White" StrokeThickness="1" Visibility="{Binding CanSelect, Converter={StaticResource VisibilityConverter}}" />
                    <Ellipse Fill="Red" Width="16" Height="16" Stroke="White" StrokeThickness="1" Visibility="{Binding IsEndNode, Converter={StaticResource VisibilityConverter}}" />
                </Grid>
            </exts:DraggablePushpin>
        </DataTemplate>

        <DataTemplate x:Key="NodeLocationTemplate">
            <exts:DraggablePushpin CanChange="True" Location="{Binding Location, Mode=TwoWay}" Background="Black" PositionOrigin="Center" Template="{StaticResource DirectionsPushpinTemplate}" cmds:CommandManager.Command="{Binding ClickCommand}" cmds:CommandManager.CommandEventName="MouseLeftButtonDown">
                <Grid>
                    <Ellipse Fill="Red" Width="16" Height="16" Stroke="White" StrokeThickness="1" />
                </Grid>
            </exts:DraggablePushpin>
        </DataTemplate>

        <DataTemplate x:Key="PathTemplate1">
            <map:MapPolyline Background="White" Locations="{Binding Nodes, Mode=TwoWay}" Stroke="White" StrokeThickness="5"
                             cmds:CommandManager.Command="{Binding PathClickCommand, ElementName='ViewModel'}"
                             cmds:CommandManager.CommandEventName="MouseLeftButtonUp"
                             cmds:CommandManager.CommandParameter="{Binding Id}" />
        </DataTemplate>
        <DataTemplate x:Key="PathTemplate2">
            <map:MapPolyline Background="Black" Locations="{Binding Nodes, Mode=TwoWay}" Stroke="Black" StrokeThickness="3"
                             cmds:CommandManager.Command="{Binding PathClickCommand, ElementName='ViewModel'}"
                             cmds:CommandManager.CommandEventName="MouseLeftButtonUp"
                             cmds:CommandManager.CommandParameter="{Binding Id}" />
        </DataTemplate>
        <DataTemplate x:Key="PathTemplate3">
            <map:MapPolyline Background="Red" Locations="{Binding Nodes, Mode=TwoWay}" Stroke="Red" StrokeThickness="3" 
                             Visibility="{Binding IsSelected, Converter={StaticResource VisibilityConverter}}" />
        </DataTemplate>
    </navigation:Page.Resources>

    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid x:Name="MapLayout" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="0" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="{Binding Image.Loaded, Converter={StaticResource GridLengthConverter}}" />
            </Grid.ColumnDefinitions>

            <map:Map x:Name="MyMap" Grid.Row="0" Grid.Column="0" Center="{Binding Center, Mode=TwoWay}" CopyrightVisibility="Collapsed" ZoomLevel="{Binding ZoomLevel, Mode=TwoWay}" CredentialsProvider="AthZ1tu5ROM0PUWcIYFSxC1oQALFR-g0aoFIuL9tlbeGJ9Z6qKIRYoB_jGpct8Yu">
                <map:MapLayer>
                    <map:MapItemsControl ItemsSource="{Binding Paths.Paths}" ItemTemplate="{StaticResource PathTemplate1}" />
                    <map:MapItemsControl ItemsSource="{Binding Paths.Paths}" ItemTemplate="{StaticResource PathTemplate2}" />
                    <map:MapItemsControl ItemsSource="{Binding Paths.Paths}" ItemTemplate="{StaticResource PathTemplate3}" />
                    <map:MapItemsControl ItemsSource="{Binding Paths.Nodes}" ItemTemplate="{StaticResource NodeTemplate}" />
                    <map:MapItemsControl ItemsSource="{Binding Locations, ElementName=ViewLocations}" ItemTemplate="{StaticResource NodeLocationTemplate}" />
                </map:MapLayer>
            </map:Map>

            <sdk:GridSplitter Grid.Column="1" Width="8" HorizontalAlignment="Left" VerticalAlignment="Stretch" ShowsPreview="True" />

            <ScrollViewer Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <StackPanel Name="VerticalViewer" />
            </ScrollViewer>
        </Grid>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <toolkit:Expander Grid.Column="1" BorderThickness="0" Style="{StaticResource ExpanderStyle}">
                <toolkit:Expander.Header>
                    <TextBlock Style="{StaticResource ExpanderHeaderStyle}" Text="Tools" />
                </toolkit:Expander.Header>
                <StackPanel HorizontalAlignment="Right">
           
                    <Border Margin="1" BorderBrush="Black" BorderThickness="2">
                        <StackPanel>
                            <StackPanel.Resources>
                                <DataTemplate x:Name="TaskTemplate">
                                    <Button Margin="5" HorizontalAlignment="Center" cmds:CommandManager.Command="{Binding ActivateCommand}" cmds:CommandManager.CommandEventName="Click" Content="{Binding Label}" ToolTipService.ToolTip="{Binding ToolTip}" Visibility="{Binding Visibility}" />
                                </DataTemplate>
                            </StackPanel.Resources>
                            <TextBlock FontWeight="Bold" Text="Tasks" HorizontalAlignment="Center" />
                            <!--<ItemsControl ItemsSource="{Binding CurrentTaskMode.Tasks, ElementName=TaskModes}" ItemTemplate="{StaticResource TaskTemplate}" />-->
                            <!--<ItemsControl DataContext="{Binding CurrentTaskMode, ElementName=TaskModes}" ItemsSource="{Binding Tasks}" ItemTemplate="{StaticResource TaskTemplate}" />-->
                            <ItemsControl DataContext="{Binding ElementName=PathTasks}" ItemsSource="{Binding Tasks}" ItemTemplate="{StaticResource TaskTemplate}" />
                        </StackPanel>
                    </Border>

                    <StackPanel DataContext="{StaticResource PathTasks}" Visibility="{Binding CurrentTask, Converter={StaticResource ObjectVisibilityConverter}}">
                        <Border Margin="1" BorderBrush="Black" BorderThickness="2">
                            <StackPanel>
                                <TextBlock HorizontalAlignment="Center" FontWeight="Bold" Text="Curent Task" />
                                <TextBlock Text="{Binding CurrentTask.Label}" />
                            </StackPanel>
                        </Border>

                        <Border Margin="1" BorderBrush="Black" BorderThickness="2">
                            <StackPanel>
                                <TextBlock FontWeight="Bold" Text="Steps" HorizontalAlignment="Center" />
                                <ListBox x:Name="TaskSteps" Background="Transparent" BorderThickness="0" ItemsSource="{Binding CurrentTask.Steps}">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Label}" />
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                                    <Button Margin="5" HorizontalAlignment="Center" cmds:CommandManager.Command="{Binding CompleteCommand}" cmds:CommandManager.CommandEventName="Click" Content="Save" Visibility="{Binding ShowSave, Converter={StaticResource VisibilityConverter}}" />
                                    <Button Margin="5" HorizontalAlignment="Center" cmds:CommandManager.Command="{Binding CancelCommand}" cmds:CommandManager.CommandEventName="Click" Content="Cancel" />
                                </StackPanel>
                            </StackPanel>
                        </Border>
                    </StackPanel>
                </StackPanel>
            </toolkit:Expander>
        </Grid>

        <StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="5">
            <Border>
                <Border.Background>
                    <SolidColorBrush Opacity="0.3" Color="White" />
                </Border.Background>
                <TextBlock Margin="5,0" FontWeight="Bold" Text="{Binding SelectedValue.Instructions, ElementName=TaskSteps, FallbackValue='After selecting a task, click on a task step to display detailed instructions.'}" />
            </Border>
        </StackPanel>
        
        <Grid Grid.Row="1">
            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
                <Style TargetType="TextBox">
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                    <Setter Property="MinWidth" Value="100" />
                </Style>
                <Style TargetType="CheckBox">
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="VerticalAlignment" Value="Center" />
                </Style>
                <Style TargetType="ComboBox">
                    <Setter Property="Margin" Value="5" />
                    <Setter Property="MinWidth" Value="150" />
                    <Setter Property="HorizontalAlignment" Value="Left" />
                </Style>
                <Style TargetType="Button">
                    <Setter Property="HorizontalAlignment" Value="Right" />
                    <Setter Property="VerticalAlignment" Value="Bottom" />
                </Style>
            </Grid.Resources>
            
            <toolkit:Expander>
                <toolkit:Expander.Header>
                    <TextBlock Text="Meta Data" HorizontalAlignment="Left" />
                </toolkit:Expander.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal">

                        <exts:GroupBox Style="{StaticResource GroupBoxStyle}" Header="Node Info">
                            <StackPanel DataContext="{Binding Paths.LastNode}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition />
                                        <RowDefinition />
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="0" Grid.Column="0" Text="Latitude" />
                                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Center.Latitude}" />

                                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Longitude" />
                                    <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Center.Longitude}" />

                                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Altitude" />
                                    <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Center.Altitude}" />
                                </Grid>
                                <CheckBox Content="Outside" IsChecked="{Binding IsOutside}" />
                            </StackPanel>
                        </exts:GroupBox>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <exts:GroupBox Grid.Row="0" Style="{StaticResource GroupBoxStyle}" Header="Direction Info">
                                <StackPanel>
                                    <ComboBox ItemsSource="{Binding Paths.AllMessages}" SelectedItem="{Binding Paths.CurrentMessage, Mode=TwoWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Message}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                    <Grid>
                                        <Grid.Resources>
                                            <Style TargetType="Button">
                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                            </Style>
                                        </Grid.Resources>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Button Grid.Column="0" Content="Save" cmds:CommandManager.Command="{Binding SaveDirectionCommand}" cmds:CommandManager.CommandEventName="Click" />
                                        <Button Grid.Column="1" Content="Delete" cmds:CommandManager.Command="{Binding DeleteDirectionCommand}" cmds:CommandManager.CommandEventName="Click" />
                                    </Grid>
                                    
                                </StackPanel>
                            </exts:GroupBox>

                            <exts:GroupBox Grid.Row="1" Style="{StaticResource GroupBoxStyle}" Header="Path Info">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <StackPanel Grid.Row="0" DataContext="{Binding Paths.SelectedPath}">
                                        <CheckBox Content="Elevator" IsChecked="{Binding IsElevator, Mode=TwoWay}" />
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Stairs:" />
                                            <TextBox Text="{Binding StairCount, Mode=TwoWay, FallbackValue='0'}" />
                                        </StackPanel>
                                    </StackPanel>

                                    <Button Grid.Row="1" Content="Save Path" cmds:CommandManager.Command="{Binding PathSaveCommand}" cmds:CommandManager.CommandEventName="Click" cmds:CommandManager.CommandParameter="{Binding Paths.SelectedPath.Id}" />
                                </Grid>
                            </exts:GroupBox>

                        </Grid>

                        <exts:GroupBox Style="{StaticResource GroupBoxStyle}" Header="Direction Messages">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <StackPanel Grid.Row="0">
                                    <ComboBox x:Name="MessageComboBox" ItemsSource="{Binding Paths.Messages}" SelectedIndex="0">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Message}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>

                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>

                                        <TextBlock Grid.Row="0" Grid.Column="0" Text="Message: " />
                                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding SelectedItem.Message, ElementName=MessageComboBox, Mode=TwoWay}" />

                                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Reverse Message: " />
                                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding SelectedItem.ReverseMessage, ElementName=MessageComboBox, Mode=TwoWay}" />

                                        <TextBlock Grid.Row="2" Grid.Column="0" Text="Action: " />
                                        <ComboBox Grid.Row="2" Grid.Column="1" ItemsSource="{Binding Paths.AllActions}" SelectedItem="{Binding SelectedItem.Action, ElementName=MessageComboBox, Mode=TwoWay, TargetNullValue='None'}" />

                                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Reverse Action: " />
                                        <ComboBox Grid.Row="3" Grid.Column="1" ItemsSource="{Binding Paths.AllActions}" SelectedItem="{Binding SelectedItem.ReverseAction, ElementName=MessageComboBox, Mode=TwoWay, TargetNullValue='None'}" />

                                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Message Offset: " />
                                        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding SelectedItem.Offset, ElementName=MessageComboBox, Mode=TwoWay}" />
                                    </Grid>
                                </StackPanel>

                                <Grid Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.Resources>
                                        <Style TargetType="Button">
                                            <Setter Property="HorizontalAlignment" Value="Center" />
                                            <Setter Property="VerticalAlignment" Value="Bottom" />
                                        </Style>
                                    </Grid.Resources>
                                    <Button Grid.Column="0" Content="Add Message" cmds:CommandManager.Command="{Binding AddMessageCommand}" cmds:CommandManager.CommandEventName="Click" />
                                    <Button Grid.Column="1" Content="Delete Message" cmds:CommandManager.Command="{Binding DeleteMessageCommand}" cmds:CommandManager.CommandEventName="Click" cmds:CommandManager.CommandParameter="{Binding SelectedItem.Id, ElementName=MessageComboBox}" />
                                    <Button Grid.Column="2" Content="Save Message" cmds:CommandManager.Command="{Binding SaveMessageCommand}" cmds:CommandManager.CommandEventName="Click" cmds:CommandManager.CommandParameter="{Binding SelectedItem.Id, ElementName=MessageComboBox}" />
                                </Grid>
                            </Grid>

                        </exts:GroupBox>

                    </StackPanel>

                    <Button Grid.Column="1" Content="Clear Seleted" cmds:CommandManager.Command="{Binding ClearSelectedCommand}" cmds:CommandManager.CommandEventName="Click" />

                </Grid>
                
            </toolkit:Expander>
        </Grid>
    </Grid>

</navigation:Page>